Command: ninja all
[1/12] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/device_state.c.obj
[2/12] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[3/12] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/comms.c.obj
[4/12] Performing build step for 'bootloader'
[1/1] cd /home/andrew/rubber_ducky/esp_firmware/build/bootloader/esp-idf/esptool_py && /home/andrew/.espressif/python_env/idf5.5_py3.11_env/bin/python /home/andrew/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/andrew/rubber_ducky/esp_firmware/build/bootloader/bootloader.bin
Bootloader binary size 0x6650 bytes. 0x9b0 bytes (9%) free.
[5/12] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/packet_handler.c.obj
/home/andrew/rubber_ducky/esp_firmware/main/packet_handler.c:12:16: warning: 'calculate_checksum' defined but not used [-Wunused-function]
   12 | static uint8_t calculate_checksum(const uint8_t *data, size_t len) {
      |                ^~~~~~~~~~~~~~~~~~
[6/12] No install step for 'bootloader'
[7/12] Linking C static library esp-idf/main/libmain.a
[8/12] Completed 'bootloader'
[9/12] Generating ld/sections.ld
[10/12] Linking CXX executable rubber_ducky.elf
[11/12] Generating binary image from built executable
esptool.py v4.9.dev5
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/andrew/rubber_ducky/esp_firmware/build/rubber_ducky.bin
[12/12] cd /home/andrew/rubber_ducky/esp_firmware/build/esp-idf/esptool_py && /home/andrew/.espressif/python_env/idf5.5_py3.11_env/bin/python /home/andrew/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/andrew/rubber_ducky/esp_firmware/build/partition_table/partition-table.bin /home/andrew/rubber_ducky/esp_firmware/build/rubber_ducky.bin
rubber_ducky.bin binary size 0x37fb0 bytes. Smallest app partition is 0x100000 bytes. 0xc8050 bytes (78%) free.
