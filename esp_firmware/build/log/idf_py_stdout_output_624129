Command: ninja flash
[1/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/state_machine.c.obj
[2/10] Performing build step for 'bootloader'
[1/1] cd /home/andrew/rubber_ducky/esp_firmware/build/bootloader/esp-idf/esptool_py && /home/andrew/.espressif/python_env/idf5.5_py3.11_env/bin/python /home/andrew/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/andrew/rubber_ducky/esp_firmware/build/bootloader/bootloader.bin
Bootloader binary size 0x6650 bytes. 0x9b0 bytes (9%) free.
[3/10] Linking C static library esp-idf/main/libmain.a
[4/10] No install step for 'bootloader'
[5/10] Completed 'bootloader'
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable rubber_ducky.elf
[8/10] Generating binary image from built executable
esptool.py v4.9.dev5
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/andrew/rubber_ducky/esp_firmware/build/rubber_ducky.bin
[9/10] cd /home/andrew/rubber_ducky/esp_firmware/build/esp-idf/esptool_py && /home/andrew/.espressif/python_env/idf5.5_py3.11_env/bin/python /home/andrew/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/andrew/rubber_ducky/esp_firmware/build/partition_table/partition-table.bin /home/andrew/rubber_ducky/esp_firmware/build/rubber_ducky.bin
rubber_ducky.bin binary size 0x38770 bytes. Smallest app partition is 0x100000 bytes. 0xc7890 bytes (78%) free.
[9/10] cd /home/andrew/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/andrew/esp-idf -D "SERIAL_TOOL=/home/andrew/.espressif/python_env/idf5.5_py3.11_env/bin/python;;/home/andrew/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/andrew/rubber_ducky/esp_firmware/build -P /home/andrew/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 rubber_ducky.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.9.dev5
Serial port /dev/ttyUSB0
Connecting.....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 34:5f:45:a9:35:00
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00048fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 26192 bytes to 16507...
Writing at 0x00001000... (50 %)
Writing at 0x000075ae... (100 %)
Wrote 26192 bytes (16507 compressed) at 0x00001000 in 0.8 seconds (effective 277.1 kbit/s)...
Hash of data verified.
Compressed 231280 bytes to 123779...
Writing at 0x00010000... (12 %)
Writing at 0x0001cb0b... (25 %)
Writing at 0x00022c13... (37 %)
Writing at 0x00028a2a... (50 %)
Writing at 0x0002e63e... (62 %)
Writing at 0x00037faa... (75 %)
Writing at 0x0003ef2b... (87 %)
Writing at 0x000451ce... (100 %)
Wrote 231280 bytes (123779 compressed) at 0x00010000 in 3.1 seconds (effective 600.6 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 507.7 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
